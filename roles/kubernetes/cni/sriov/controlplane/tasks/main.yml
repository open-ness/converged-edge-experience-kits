# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2019-2020 Intel Corporation

---

- name: check if SR-IOV CNI and device plugin release already exists
  command: helm status sriov-release
  ignore_errors: yes
  register: get_release_sriov
  changed_when: false

- name: install SR-IOV CNI and device plugin
  block:
  - name: download CNI plugin
    git:
      repo: "{{ _sriov_cni.url }}"
      dest: "{{ _sriov_cni.download_dir }}"
      clone: yes
      update: no
      version: "{{ _sriov_cni.commit }}"
    register: result
    retries: "{{ number_of_retries }}"
    until: result is succeeded
    delay: "{{ retry_delay }}"
    when: not offline_enable

  - name: download device plugin
    git:
      repo: "{{ _sriov_dev_plugin.url }}"
      dest: "{{ _sriov_dev_plugin.download_dir }}"
      clone: yes
      update: no
      version: "{{ _sriov_dev_plugin.commit }}"
    register: result
    retries: "{{ number_of_retries }}"
    until: result is succeeded
    delay: "{{ retry_delay }}"
    when: not offline_enable

  - name: login harbor registry firstly
    shell: docker login "{{ _registry_ip_address }}:{{ _registry_port }}" -uadmin -p"{{ harborAdminPassword }}"
    register: result
    retries: 60
    delay: 15
    until: result is succeeded
    ignore_errors: yes

  - name: login harbor registry firstly
    shell: docker login "{{ _registry_ip_address }}:{{ _registry_port }}" -uadmin -p"{{ harborAdminPassword }}"
    register: result
    retries: 60
    delay: 15
    until: result is succeeded
    ignore_errors: yes

  - name: build CNI image
    docker_image:
      build:
        path: "{{ _sriov_cni.download_dir }}"
        use_config_proxy: yes
        pull: yes
      name: "{{ _registry_ip_address }}:{{ _registry_port }}/intel/sriov-cni"
      push: yes
      source: build
    register: result
    retries: "{{ number_of_retries }}"
    until: result is succeeded
    delay: "{{ retry_delay }}"
    when: not offline_enable

  - name: tag and push sriov-cni image to local registry if offline mode
    docker_image:
      name: nfvpe/sriov-cni
      repository: "{{ _registry_ip_address }}:{{ _registry_port }}/intel/sriov-cni"
      push: yes
      source: local
    when: offline_enable

  - name: build device plugin image
    command: make image
    args:
      chdir: "{{ _sriov_dev_plugin.download_dir }}"
    register: result
    retries: "{{ number_of_retries }}"
    until: result is succeeded
    delay: "{{ retry_delay }}"
    changed_when: true
    when: not offline_enable

  - name: tag and push device plugin image to local registry
    docker_image:
      name: ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin
      repository: "{{ _registry_ip_address }}:{{ _registry_port }}/intel/sriov-device-plugin"
      push: yes
      source: local

  - name: remove local device plugin image
    docker_image:
      state: absent
      name: ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin

  - name: copy sriov chart
    block:
    - name: copy base files
      copy:
        src: "sriov"
        dest: "{{ ne_helm_charts_default_dir }}"
    - name: template rest of the chart
      template:
        src: "{{ item }}.j2"
        dest: "{{ ne_helm_charts_default_dir }}/sriov/templates/{{ item }}"
      with_items:
      - configMap.yml
      - crd.yml

  - name: create custom namespaces for CRD if specified
    include_role:
      name: kubernetes/custom_namespace
    vars:
      - _custom_ns: "{{ _sriov_dp_crd_extension_ns }}"
    when: _sriov_dp_crd_extension_ns | length > 0

  - name:
    set_fact:
      _sriov_dp_cek_url: "https://{{ hostvars[groups['controller_group'][0]]['ansible_host'] }}/sriov"
    when: offline_enable

  - name: download device plugin chart templates
    get_url:
      url: "{{ _sriov_dp_cek_url }}/{{ item }}"
      dest: "{{ ne_helm_charts_default_dir }}/sriov/templates"
    register: result
    retries: "{{ number_of_retries }}"
    until: result is succeeded
    delay: "{{ retry_delay }}"
    with_items: "{{ _sriov_dp_cek_chart_templates }}"

  - name: install SR-IOV CNI and device plugin release
    command: >
      helm install sriov-release {{ ne_helm_charts_default_dir }}/sriov --set registry_ip={{ _registry_ip_address }}
      --set registry_port={{ _registry_port }} --set sriov_kubevirt_enable={{ sriov_kubevirt_enable }}
      --set fpga_sriov_userspace_enable={{ fpga_sriov_userspace_enable }}
      --set acc100_sriov_userspace_enable={{ acc100_sriov_userspace_enable }}
      --set image.repository={{ _registry_ip_address }}:{{ _registry_port }}/intel/sriov-device-plugin
      --set image.tag=latest
    changed_when: true
  when: get_release_sriov.rc != 0
